[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sifaka"
version = "0.1.0"
description = "Sifaka - AI validation, improvement, and evaluation framework with built-in guardrails"
authors = [{name = "Evan Volgas", email = "evan.volgas@gmail.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11,<3.12"
keywords = ["ai", "llm", "validation", "guardrails", "text-generation", "machine-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# Core dependencies (minimal required for basic functionality)
dependencies = [
    "pydantic>=2.11.3",
    "typing-extensions>=4.10.0",
    "python-dotenv>=1.0.1",
    "requests>=2.31.0",
    "httpx>=0.28.1",
    "aiofiles>=23.0.0",
    "tenacity>=8.2.3",
]

[project.optional-dependencies]
# Model providers
openai = [
    "openai>=1.76.0",
    "tiktoken>=0.9.0",
]
anthropic = [
    "anthropic>=0.50.0",
]

# Retrievers and vector databases
redis = [
    "redis>=5.0.0",
]
milvus = [
    "pymilvus>=2.4.0",
]

# ML and classification (optional dependencies for classifiers)
classifiers = [
    "scikit-learn>=1.3.0",
    "textblob>=0.17.1",
    "langdetect>=1.0.9",
    "better-profanity>=0.7.0",
]

# Validation and guardrails
guardrails = [
    "guardrails-ai>=0.6.6",
]

# Performance and utilities
performance = [
    "numpy>=1.26.0",
    "psutil>=5.9.5",
    "tqdm>=4.66.2",
]

# Development tools
dev = [
    "pytest>=8.0.2",
    "pytest-cov>=4.1.0",
    "black>=24.2.0",
    "isort>=5.13.2",
    "mypy>=1.9.0",
    "ruff>=0.3.0",
    "flake8>=5.0.0",
    "typer>=0.9.0",
    "types-jsonschema>=4.21.0",
    "types-PyYAML>=6.0.0",
    "types-requests>=2.31.0",
]

# Convenience groups
models = [
    "sifaka[openai,anthropic]",
]
retrievers = [
    "sifaka[redis,milvus]",
]
all = [
    "sifaka[models,retrievers,classifiers,guardrails,performance]",
]
full = [
    "sifaka[all,dev]",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["sifaka*"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.ruff]
line-length = 100
target-version = "py311"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "tests",
    "examples",
    "demos",
    "benchmarks",
    "tools",
]

[tool.ruff.lint]
select = ["E", "F", "B", "I"]
ignore = ["E203", "B904"]

[tool.ruff.lint.isort]
known-first-party = ["sifaka"]
