name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Set up test environment
      run: |
        # Set mock API keys for unit tests
        echo "OPENAI_API_KEY=test-key-for-ci" >> $GITHUB_ENV
        echo "ANTHROPIC_API_KEY=test-key-for-ci" >> $GITHUB_ENV
        echo "GEMINI_API_KEY=test-key-for-ci" >> $GITHUB_ENV
        echo "XAI_API_KEY=test-key-for-ci" >> $GITHUB_ENV
        echo "CI=true" >> $GITHUB_ENV
        echo "USE_MOCK_LLM=true" >> $GITHUB_ENV

    - name: Run tests
      run: uv run pytest tests/unit --cov=sifaka
      env:
        CI: true
        USE_MOCK_LLM: true
        OPENAI_API_KEY: test-key-for-ci
        ANTHROPIC_API_KEY: test-key-for-ci
        GEMINI_API_KEY: test-key-for-ci

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Build package
      run: uv build

    - name: Check package
      run: uv run twine check dist/*

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: uv run twine upload dist/*

    - name: Extract version changelog
      id: changelog
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        CHANGELOG=$(sed -n "/^## \[$VERSION\]/,/^## \[/p" CHANGELOG.md | sed '$d')
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body: |
          ${{ steps.changelog.outputs.CHANGELOG }}

          ## Installation

          ```bash
          pip install sifaka==${{ github.ref_name }}
          ```
        generate_release_notes: true
