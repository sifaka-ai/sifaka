name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        # Install setuptools for pkg_resources compatibility
        pip install setuptools

    - name: Set up test environment
      run: |
        # Set mock API keys for unit tests
        echo "OPENAI_API_KEY=test-key-for-ci" >> $GITHUB_ENV
        echo "ANTHROPIC_API_KEY=test-key-for-ci" >> $GITHUB_ENV
        echo "GEMINI_API_KEY=test-key-for-ci" >> $GITHUB_ENV
        echo "XAI_API_KEY=test-key-for-ci" >> $GITHUB_ENV
        echo "CI=true" >> $GITHUB_ENV
        echo "USE_MOCK_LLM=true" >> $GITHUB_ENV

    - name: Lint with ruff
      run: |
        ruff check sifaka tests

    - name: Type check with mypy
      run: |
        mypy sifaka --ignore-missing-imports

    - name: Test with pytest
      run: |
        # Run only unit tests in CI, skip integration tests
        pytest tests/unit -v --cov=sifaka --cov-report=term-missing --cov-report=xml
      env:
        CI: true
        USE_MOCK_LLM: true
        OPENAI_API_KEY: test-key-for-ci
        ANTHROPIC_API_KEY: test-key-for-ci
        GEMINI_API_KEY: test-key-for-ci

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
