groups:
  - name: sifaka_alerts
    interval: 30s
    rules:
      # High Error Rate Alert
      - alert: SifakaHighErrorRate
        expr: |
          (
            sum(rate(sifaka_errors_total[5m]))
            /
            sum(rate(sifaka_improvements_total[5m]))
          ) > 0.05
        for: 5m
        labels:
          severity: critical
          team: platform
        annotations:
          summary: "High error rate in Sifaka improvements"
          description: "Error rate is {{ $value | humanizePercentage }} (threshold: 5%)"
          runbook_url: "https://wiki.example.com/runbooks/sifaka-high-error-rate"

      # Slow Improvements Alert
      - alert: SifakaSlowImprovements
        expr: |
          histogram_quantile(0.95,
            sum(rate(sifaka_improvement_duration_seconds_bucket[5m])) by (le, critic)
          ) > 30
        for: 10m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "Sifaka improvements are slow"
          description: "P95 latency for {{ $labels.critic }} is {{ $value }}s (threshold: 30s)"
          dashboard_url: "https://grafana.example.com/d/sifaka-prometheus"

      # High Token Usage Alert
      - alert: SifakaHighTokenUsage
        expr: |
          sum(rate(sifaka_tokens_total[5m])) > 10000
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "High token usage detected"
          description: "Token usage rate is {{ $value | humanize }} tokens/s (threshold: 10k/s)"
          cost_estimate: "~${{ $value | mul 0.002 | humanize }}/hour at current rate"

      # No Improvements Alert (Service Down)
      - alert: SifakaNoImprovements
        expr: |
          sum(rate(sifaka_improvements_total[5m])) == 0
        for: 5m
        labels:
          severity: critical
          team: platform
        annotations:
          summary: "No Sifaka improvements in last 5 minutes"
          description: "Sifaka service may be down or not receiving requests"
          action: "Check service health and logs"

      # Critic-Specific Error Rate
      - alert: SifakaCriticHighErrorRate
        expr: |
          (
            sum by (critic) (rate(sifaka_errors_total[5m]))
            /
            sum by (critic) (rate(sifaka_improvements_total[5m]))
          ) > 0.10
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "High error rate for {{ $labels.critic }} critic"
          description: "Error rate is {{ $value | humanizePercentage }} (threshold: 10%)"
          critic: "{{ $labels.critic }}"

      # Memory Usage Alert (if exposed)
      - alert: SifakaHighMemoryUsage
        expr: |
          sifaka_process_resident_memory_bytes > 2e9
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "High memory usage in Sifaka"
          description: "Memory usage is {{ $value | humanize1024 }}B (threshold: 2GB)"

      # Cost Alert
      - alert: SifakaHighCost
        expr: |
          sum(rate(sifaka_improvement_cost_dollars_sum[1h])) > 100
        for: 5m
        labels:
          severity: warning
          team: finance
        annotations:
          summary: "High API costs detected"
          description: "Projected hourly cost is ${{ $value | humanize }} (threshold: $100/hour)"
          action: "Review usage patterns and consider rate limiting"

      # Validation Failure Rate
      - alert: SifakaHighValidationFailureRate
        expr: |
          (
            sum(rate(sifaka_validations_total{result="failed"}[5m]))
            /
            sum(rate(sifaka_validations_total[5m]))
          ) > 0.20
        for: 10m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "High validation failure rate"
          description: "{{ $value | humanizePercentage }} of validations failing (threshold: 20%)"

      # Long Running Improvements
      - alert: SifakaLongRunningImprovement
        expr: |
          sifaka_active_improvements > 0
        for: 15m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "Long running improvement detected"
          description: "{{ $value }} improvements running for over 15 minutes"
          action: "Check for stuck operations or infinite loops"

      # Rate Limit Approaching
      - alert: SifakaRateLimitApproaching
        expr: |
          (
            sum(rate(sifaka_errors_total{error_type="RateLimitError"}[5m]))
            /
            sum(rate(sifaka_improvements_total[5m]))
          ) > 0.01
        for: 5m
        labels:
          severity: info
          team: platform
        annotations:
          summary: "API rate limits being hit"
          description: "{{ $value | humanizePercentage }} of requests hitting rate limits"
          action: "Consider implementing backoff or switching providers"

# Recording Rules for Performance
  - name: sifaka_recording_rules
    interval: 30s
    rules:
      # Success rate by critic
      - record: sifaka:success_rate:5m
        expr: |
          1 - (
            sum by (critic) (rate(sifaka_errors_total[5m]))
            /
            sum by (critic) (rate(sifaka_improvements_total[5m]))
          )

      # Average improvement duration
      - record: sifaka:duration:mean:5m
        expr: |
          sum by (critic) (rate(sifaka_improvement_duration_seconds_sum[5m]))
          /
          sum by (critic) (rate(sifaka_improvement_duration_seconds_count[5m]))

      # Token usage rate by model
      - record: sifaka:tokens:rate:5m
        expr: |
          sum by (model) (rate(sifaka_tokens_total[5m]))

      # Cost rate by model
      - record: sifaka:cost:rate:1h
        expr: |
          sum by (model) (rate(sifaka_improvement_cost_dollars_sum[1h]))
