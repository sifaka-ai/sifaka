#!/usr/bin/env python3
"""
Test script to debug import issues.
"""

import sys
import os

# Add the sifaka directory to the path
sys.path.insert(0, '/Users/evanvolgas/Documents/not_beam/sifaka')

def test_basic_imports():
    """Test basic Python imports."""
    print("Testing basic imports...")
    
    try:
        import datetime
        print("‚úÖ datetime")
    except Exception as e:
        print(f"‚ùå datetime: {e}")
        return False
    
    try:
        import uuid
        print("‚úÖ uuid")
    except Exception as e:
        print(f"‚ùå uuid: {e}")
        return False
    
    try:
        from typing import Any, Dict, List, Optional
        print("‚úÖ typing")
    except Exception as e:
        print(f"‚ùå typing: {e}")
        return False
    
    try:
        from pydantic import BaseModel, Field
        print("‚úÖ pydantic")
    except Exception as e:
        print(f"‚ùå pydantic: {e}")
        return False
    
    return True

def test_sifaka_imports():
    """Test sifaka imports step by step."""
    print("\nTesting sifaka imports...")
    
    try:
        from sifaka.core.thought import Document
        print("‚úÖ Document")
    except Exception as e:
        print(f"‚ùå Document: {e}")
        return False
    
    try:
        from sifaka.core.thought import ValidationResult
        print("‚úÖ ValidationResult")
    except Exception as e:
        print(f"‚ùå ValidationResult: {e}")
        return False
    
    try:
        from sifaka.core.thought import CriticFeedback
        print("‚úÖ CriticFeedback")
    except Exception as e:
        print(f"‚ùå CriticFeedback: {e}")
        return False
    
    try:
        from sifaka.core.thought import Thought
        print("‚úÖ Thought")
    except Exception as e:
        print(f"‚ùå Thought: {e}")
        return False
    
    try:
        from sifaka.core.interfaces import Model, Validator, Critic, Retriever
        print("‚úÖ Interfaces")
    except Exception as e:
        print(f"‚ùå Interfaces: {e}")
        return False
    
    try:
        from sifaka.utils.error_handling import ChainError, chain_context
        print("‚úÖ Error handling")
    except Exception as e:
        print(f"‚ùå Error handling: {e}")
        return False
    
    try:
        from sifaka.utils.logging import get_logger
        print("‚úÖ Logging")
    except Exception as e:
        print(f"‚ùå Logging: {e}")
        return False
    
    try:
        from sifaka.chain import Chain
        print("‚úÖ Chain")
    except Exception as e:
        print(f"‚ùå Chain: {e}")
        return False
    
    return True

def main():
    """Run the import tests."""
    print("üîç Import Debugging Script")
    print("=" * 40)
    
    if not test_basic_imports():
        print("\n‚ùå Basic imports failed!")
        return
    
    if not test_sifaka_imports():
        print("\n‚ùå Sifaka imports failed!")
        return
    
    print("\nüéâ All imports successful!")

if __name__ == "__main__":
    main()
